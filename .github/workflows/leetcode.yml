name: LeetCode Stats Tracker
on:
  schedule:
    - cron: '0 18 * * *'  # Daily at 6 PM UTC
  workflow_dispatch:      # Manual trigger

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Fetch LeetCode Data
        id: fetch-data
        run: |
          # GraphQL query for all stats
          QUERY='{
            "query":"query getUserProfile($username: String!) {
              matchedUser(username: $username) {
                submitStats {
                  acSubmissionNum { difficulty count }
                  totalSubmissionNum { count }
                }
                profile { ranking }
                userContestRanking { rating attendedContestsCount topPercentage }
                recentSubmissionList(limit: 1) { title }
              }
            }",
            "variables":{"username":"ananymishradev"}
          }'

          # Try with retries
          for i in {1..3}; do
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Referer: https://leetcode.com/ananymishradev/" \
              -d "$QUERY" \
              https://leetcode.com/graphql > leetcode_raw.json && break
            sleep 5
          done

          # Process data
          jq '{
            solved: .data.matchedUser.submitStats.acSubmissionNum[0].count,
            easy: .data.matchedUser.submitStats.acSubmissionNum[1].count,
            medium: .data.matchedUser.submitStats.acSubmissionNum[2].count,
            hard: .data.matchedUser.submitStats.acSubmissionNum[3].count,
            ranking: .data.matchedUser.profile.ranking,
            contestRating: (.data.matchedUser.userContestRanking.rating | floor),
            contestTopPercent: (.data.matchedUser.userContestRanking.topPercentage | tonumber | round * 100 | . / 100),
            contestsAttended: .data.matchedUser.userContestRanking.attendedContestsCount,
            lastSubmission: .data.matchedUser.recentSubmissionList[0].title,
            acceptanceRate: (
              (.data.matchedUser.submitStats.acSubmissionNum[0].count / .data.matchedUser.submitStats.totalSubmissionNum[0].count * 100 | round / 100)
              // 0
            )
          }' leetcode_raw.json > stats.json

          # Fallback if API fails
          if [ ! -s stats.json ]; then
            echo '{}' > stats.json
          fi

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Generate SVG
        run: |
          pip install python-dateutil
          python scripts/generate_svg.py
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add stats.json stats.svg
          git diff-index --quiet HEAD || git commit -m "Update LeetCode stats [skip ci]"
          git push

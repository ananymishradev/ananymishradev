name: LeetCode Stats Tracker
on:
  schedule:
    - cron: '0 18 * * *'  # Daily at 6 PM UTC
  workflow_dispatch:      # Manual trigger option

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Outputs Directory
        run: mkdir -p outputs

      - name: Fetch LeetCode Data
        run: |
          # GraphQL query for all stats
          QUERY='{
            "query":"query getUserProfile($username: String!) {
              matchedUser(username: $username) {
                submitStats {
                  acSubmissionNum { difficulty count }
                  totalSubmissionNum { count }
                }
                profile { ranking }
                userContestRanking { rating attendedContestsCount topPercentage }
                recentSubmissionList(limit: 1) { title }
              }
            }",
            "variables":{"username":"ananymishradev"}
          }'

          # Fallback data
          FALLBACK_DATA='{
            "solved": 0, "easy": 0, "medium": 0, "hard": 0,
            "ranking": "N/A", "contestRating": 0, "contestTopPercent": 0,
            "contestsAttended": 0, "lastSubmission": "N/A", "acceptanceRate": 0
          }'

          # Try with retries
          for i in {1..3}; do
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Referer: https://leetcode.com/ananymishradev/" \
              -d "$QUERY" \
              https://leetcode.com/graphql > outputs/leetcode_raw.json && break
            sleep 5
          done

          # Process data with error handling
          jq '{
            solved: (.data.matchedUser.submitStats.acSubmissionNum[0].count // 0),
            easy: (.data.matchedUser.submitStats.acSubmissionNum[1].count // 0),
            medium: (.data.matchedUser.submitStats.acSubmissionNum[2].count // 0),
            hard: (.data.matchedUser.submitStats.acSubmissionNum[3].count // 0),
            ranking: (.data.matchedUser.profile.ranking // "N/A"),
            contestRating: (.data.matchedUser.userContestRanking?.rating // 0 | floor),
            contestTopPercent: (.data.matchedUser.userContestRanking?.topPercentage // 0 | tonumber | round * 100 | . / 100),
            contestsAttended: (.data.matchedUser.userContestRanking?.attendedContestsCount // 0),
            lastSubmission: (.data.matchedUser.recentSubmissionList[0]?.title // "N/A"),
            acceptanceRate: (
              ((.data.matchedUser.submitStats.acSubmissionNum[0].count // 1) / 
               (.data.matchedUser.submitStats.totalSubmissionNum[0].count // 1) * 100 | round / 100)
            )
          }' outputs/leetcode_raw.json > outputs/stats.json || echo "$FALLBACK_DATA" > outputs/stats.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Generate SVG Badge
        run: |
          pip install python-dateutil
          python scripts/generate_svg.py
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add outputs/*
          git diff-index --quiet HEAD || git commit -m "Update LeetCode stats [skip ci]"
          git push
